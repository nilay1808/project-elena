{"version":3,"sources":["components/UserInput.js","components/RouteData.js","components/MapView.js","components/ErrorModal.js","App.js","index.js"],"names":["UserInput","state","start","dest","goal","limit","algorithm","method","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","updateLoading","fetch","body","JSON","stringify","then","res","a","json","data","props","updateData","loading","catch","err","console","log","updateErrorMsg","toString","Card","style","width","background","color","marginTop","marginLeft","Form","onSubmit","Row","Group","as","Col","controlId","Label","Control","type","placeholder","this","onChange","hidden","className","Button","variant","Spinner","animation","Component","options","scales","xAxes","ticks","display","legendOpts","testData","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","datas","finalDistance","maxGrade","averageGrade","totalElevationGain","RouteData","update","dataPoints","length","path","path_data","elevData","total_Dist","i","long","lat","dist","grade","elev","elevation","push","opacity","toFixed","legend","MapView","renderColor","item","min","max","perc","r","g","Math","round","perc2color","pinLayers","pathLayers","d","min_grade","Number","POSITIVE_INFINITY","max_grade","NEGATIVE_INFINITY","pinData","name","coordinates","newData","slice","newLayer","PathLayer","String","pickable","widthScale","widthMinPixels","getColor","IconLayer","getIcon","url","height","anchorY","sizeScale","getPosition","getSize","top","left","zIndex","viewState","viewport","onViewStateChange","v","_onViewStateChange","controller","layers","mapStyle","onViewportChange","mapboxApiAccessToken","React","ErrorModal","Modal","show","showError","Header","Title","Body","errorMsg","Footer","onClick","clearError","App","resp","len","floor","zoom","calculateZoom","FlyToInterpolator","updateHeight","msg","bool","end","haversine","lat1","lon1","lat2","lon2","φ1","PI","φ2","Δφ","Δλ","sin","cos","atan2","sqrt","latitude","longitude","bearing","pitch","bind","position","alignItems","Navbar","Brand","Nav","Link","href","borderLeft","payload","right","ReactDOM","render","document","getElementById"],"mappings":"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","file":"js/main.71f94638.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nexport default class UserInput extends Component {\n\tstate = {\n\t\tstart: \"\",\n\t\tdest: \"\",\n\t\tgoal: \"Minimize Elevation Gain\",\n\t\tlimit: \"0\",\n\t\talgorithm: \"AStar\",\n\t\tmethod: \"drive\",\n\t};\n\n\thandleChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.target.id]: e.target.value,\n\t\t});\n\t};\n\n\thandleSubmit = (e) => {\n\t\te.preventDefault();\n\t\t// console.log(this.state);\n\t\t// this.setState({ loading: true });\n\t\tthis.updateLoading()\n\n\t\t// eslint-disable-next-line\n\t\tconst resp = {\n\t\t\tpath: [\n\t\t\t\t[-71.1188219, 42.373674],\n\t\t\t\t[-71.1185058, 42.3733081],\n\t\t\t\t[-71.1193483, 42.3722633],\n\t\t\t\t[-71.1196139, 42.371766],\n\t\t\t\t[-71.1188907, 42.3714467],\n\t\t\t\t[-71.1181625, 42.3711969],\n\t\t\t\t[-71.117355, 42.3709216],\n\t\t\t\t[-71.1177529, 42.3702542],\n\t\t\t\t[-71.1181448, 42.3695963],\n\t\t\t\t[-71.1173632, 42.3692173],\n\t\t\t\t[-71.1176905, 42.3689022],\n\t\t\t\t[-71.1192636, 42.3674198],\n\t\t\t\t[-71.1190646, 42.3673015],\n\t\t\t\t[-71.1190093, 42.3673493],\n\t\t\t\t[-71.1183064, 42.3641648],\n\t\t\t\t[-71.1181752, 42.3641617],\n\t\t\t\t[-71.1178261, 42.3641803],\n\t\t\t\t[-71.1174531, 42.3610148],\n\t\t\t\t[-71.1159585, 42.3614839],\n\t\t\t\t[-71.1159469, 42.3613844],\n\t\t\t\t[-71.1158914, 42.3609058],\n\t\t\t\t[-71.1158388, 42.3605355],\n\t\t\t\t[-71.1157603, 42.3599819],\n\t\t\t\t[-71.1156712, 42.3593559],\n\t\t\t\t[-71.1156049, 42.3589434],\n\t\t\t\t[-71.1155893, 42.3588461],\n\t\t\t\t[-71.1155789, 42.3587842],\n\t\t\t\t[-71.115466, 42.358271],\n\t\t\t\t[-71.1153278, 42.357783],\n\t\t\t\t[-71.1150425, 42.3578433],\n\t\t\t\t[-71.1148799, 42.3574523],\n\t\t\t\t[-71.1150374, 42.3574058],\n\t\t\t\t[-71.1141339, 42.3563464],\n\t\t\t\t[-71.1140682, 42.3562989],\n\t\t\t\t[-71.1111139, 42.3546657],\n\t\t\t\t[-71.1108949, 42.3546324],\n\t\t\t\t[-71.1111251, 42.3540455],\n\t\t\t\t[-71.1105129, 42.3534874],\n\t\t\t\t[-71.1109194, 42.3506323],\n\t\t\t\t[-71.1096727, 42.350488],\n\t\t\t\t[-71.1066732, 42.3501335],\n\t\t\t\t[-71.1065493, 42.3501181],\n\t\t\t\t[-71.1064049, 42.3501002],\n\t\t\t\t[-71.1063793, 42.3502285],\n\t\t\t\t[-71.1062435, 42.3504679],\n\t\t\t\t[-71.1061893, 42.3508483],\n\t\t\t\t[-71.1059991, 42.3507388],\n\t\t\t\t[-71.1055298, 42.3509986],\n\t\t\t],\n\t\t\tname: \"Route 1\",\n\t\t\tcolor: [255, 255, 255],\n\t\t};\n\t\t// this.props.updateData(resp);\n\n\t\tfetch(\"/route\", {\n\t\t\tmethod: \"POST\",\n\t\t\tbody: JSON.stringify(this.state),\n\t\t})\n\t\t\t.then(async (res) => {\n\t\t\t\tlet data = await res.json();\n\t\t\t\tthis.props.updateData(data);\n\t\t\t\tthis.setState({ loading: false });\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tthis.props.updateErrorMsg(err.toString())\n\t\t\t});\n\t};\n\n\tupdateLoading = () => {\n\t\tthis.props.updateLoading()\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<Card\n\t\t\t\tbody\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: \"400px\",\n\t\t\t\t\tbackground: \"rgba(0, 0, 0, 0.5)\",\n\t\t\t\t\tcolor: \"#ffffff\",\n\t\t\t\t\tmarginTop: \"2.5%\",\n\t\t\t\t\tmarginLeft: \"5%\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Form\n\t\t\t\t\tonSubmit={(e) => {\n\t\t\t\t\t\tthis.handleSubmit(e);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Form.Row>\n\t\t\t\t\t\t<Form.Group as={Col} controlId=\"start\">\n\t\t\t\t\t\t\t<Form.Label>Start Location</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"Enter start location\"\n\t\t\t\t\t\t\t\tvalue={this.state.start}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tthis.handleChange(e);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t</Form.Row>\n\n\t\t\t\t\t<Form.Row>\n\t\t\t\t\t\t<Form.Group as={Col} controlId=\"dest\">\n\t\t\t\t\t\t\t<Form.Label>End Location</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tplaceholder=\"Enter end location\"\n\t\t\t\t\t\t\t\tvalue={this.state.dest}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tthis.handleChange(e);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t</Form.Row>\n\n\t\t\t\t\t<Form.Row>\n\t\t\t\t\t\t<Form.Group as={Col} controlId=\"algorithm\">\n\t\t\t\t\t\t\t<Form.Label>Algorithm</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\tas=\"select\"\n\t\t\t\t\t\t\t\tvalue={this.state.algorithm}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tthis.handleChange(e);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{/* <option>Uniform Cost Search</option> */}\n\t\t\t\t\t\t\t\t<option>AStar</option>\n\t\t\t\t\t\t\t\t{/* <option>AStar (Old)</option> */}\n\t\t\t\t\t\t\t\t<option>Breadth First Search</option>\n\t\t\t\t\t\t\t\t<option>Dijkstra</option>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t</Form.Row>\n\n\t\t\t\t\t<Form.Row hidden={this.state.algorithm === 'Breadth First Search'}>\n\t\t\t\t\t\t<Form.Group as={Col} controlId=\"goal\">\n\t\t\t\t\t\t\t<Form.Label>Optimization</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\tas=\"select\"\n\t\t\t\t\t\t\t\tvalue={this.state.goal}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tthis.handleChange(e);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option>Minimize Elevation Gain</option>\n\t\t\t\t\t\t\t\t<option>Maximize Elevation Gain</option>\n\t\t\t\t\t\t\t\t<option>Maximize Steepness</option>\n\t\t\t\t\t\t\t\t<option>Minimize Steepness</option>\n\t\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t</Form.Row>\n\n\t\t\t\t\t<Form.Row hidden={this.state.algorithm === 'Breadth First Search'}>\n\t\t\t\t\t\t<Form.Group as={Col} controlId=\"limit\">\n\t\t\t\t\t\t\t<Form.Label>Deviation Limit (x%)</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tplaceholder=\"x%\"\n\t\t\t\t\t\t\t\tvalue={this.state.limit}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tthis.handleChange(e);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t</Form.Row>\n\n\t\t\t\t\t<Form.Row>\n\t\t\t\t\t\t<Form.Group as={Col} controlId=\"method\">\n\t\t\t\t\t\t\t<Form.Label>Transportation Method</Form.Label>\n\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\tas=\"select\"\n\t\t\t\t\t\t\t\t// disabled\n\t\t\t\t\t\t\t\tvalue={this.state.method}\n\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\tthis.handleChange(e);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option>drive</option>\n\t\t\t\t\t\t\t\t<option>bike</option>\n\t\t\t\t\t\t\t\t<option>walk</option>\n\t\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t</Form.Row>\n\t\t\t\t\t<Form.Row className=\"justify-content-md-center\">\n\t\t\t\t\t\t<Button variant=\"light\" type=\"submit\">\n\t\t\t\t\t\t\t{this.props.loading ? (\n\t\t\t\t\t\t\t\t<Spinner animation=\"border\" />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\"Submit\"\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form.Row>\n\t\t\t\t</Form>\n\t\t\t</Card>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\n\nimport Form from \"react-bootstrap/Form\";\nimport Col from \"react-bootstrap/Col\";\nimport Card from \"react-bootstrap/Card\";\nimport { Line } from \"react-chartjs-2\";\n\nconst options = {\n\tscales: {\n\t\txAxes: [\n\t\t\t{\n\t\t\t\tticks: {\n\t\t\t\t\tdisplay: false, //this will remove only the label\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t},\n};\n\nconst legendOpts = {\n\tdisplay: false,\n};\n\nconst testData = {\n\tlabels: [],\n\tdatasets: [\n\t\t{\n\t\t\tlabel: \"\",\n\t\t\tfill: false,\n\t\t\tlineTension: 0.1,\n\t\t\tbackgroundColor: \"rgba(75,192,192,0.4)\",\n\t\t\tborderColor: \"rgba(75,192,192,1)\",\n\t\t\tborderCapStyle: \"butt\",\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: \"miter\",\n\t\t\tpointBorderColor: \"rgba(75,192,192,1)\",\n\t\t\tpointBackgroundColor: \"#fff\",\n\t\t\tpointBorderWidth: 1,\n\t\t\tpointHoverRadius: 5,\n\t\t\tpointHoverBackgroundColor: \"rgba(75,192,192,1)\",\n\t\t\tpointHoverBorderColor: \"rgba(220,220,220,1)\",\n\t\t\tpointHoverBorderWidth: 2,\n\t\t\tpointRadius: 1,\n\t\t\tpointHitRadius: 10,\n\t\t\tdata: [10, 11],\n\t\t},\n\t],\n};\n\nlet datas = [];\nlet finalDistance = 0;\nlet maxGrade = 0;\nlet averageGrade = 0;\nlet totalElevationGain = 0;\nexport default class RouteData extends Component {\n\n    update = (dataPoints) => {\n        \n        finalDistance = 0;\n        averageGrade = 0;\n        totalElevationGain = 0;\n\n        if (dataPoints.length === 0) {\n            return\n        }\n        let path = dataPoints[0].path;\n        let path_data = dataPoints[0].path_data;\n\n        let label = [];\n        let elevData = [];\n        let total_Dist = 0;\n        maxGrade = 0;\n\n        for (let i = 0; i < path.length; i++) {\n\n            let long = path[i][0];\n            let lat = path[i][1];\n            let dist = path_data[i].length;\n            let grade = path_data[i].grade;\n            let elev = path_data[i].elevation;\n\n            total_Dist += dist;\n            if (grade > maxGrade) {\n                maxGrade = grade;\n            }\n\n            if (i !== path.length - 1) {\n                averageGrade += grade\n                if ((path_data[i+1].elevation - elev) > 0){\n                    totalElevationGain += (path_data[i+1].elevation - elev);\n                }\n            }\n            \n\n            label.push(lat + \", \" + long);\n            elevData.push(elev);\n        }\n\n        console.log(elevData, testData.datasets[0].data);\n\n        testData.labels = label;\n        testData.datasets[0].data = elevData;\n        averageGrade /= path.length\n        finalDistance = total_Dist;\n    };\n\n    render() {\n\n        // data[0].path is {long, lat, dist, elevation}\n        let dataPoints = this.props.data;\n\n        if (dataPoints !== datas) {\n            this.update(dataPoints);\n            datas = dataPoints;\n        }\n\n\n        return (\n            <Card\n                body\n                style={finalDistance === 0 ?\n                    {\n                        width: \"350px\",\n                        background: \"rgba(0, 0, 0, 0.5)\",\n                        color: \"#ffffff\",\n                        marginTop: \"5%\",\n                        marginLeft: \"5%\",\n                        opacity: 0\n                    } : {\n                        width: \"350px\",\n                        background: \"rgba(0, 0, 0, 0.75)\",\n                        color: \"#ffffff\",\n                        marginTop: \"5%\",\n                        marginLeft: \"5%\",\n                        opacity: 100\n                    }}\n            >\n                <Form>\n                    <Form.Row>\n                        <Form.Group as={Col}\n                                    controlId=\"totalDist\">\n                            <Form.Label>Total Distance</Form.Label>\n                            <br/>\n                            <Form.Label>{(finalDistance/1000).toFixed(3)} Kilometers</Form.Label>\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"dest\">\n                            <Form.Label>Steepest Incline</Form.Label>\n                            <br/>\n                            <Form.Label>{(maxGrade * 10).toFixed(3)} Vertical Meters per 10 Meters</Form.Label>\n                        </Form.Group>\n                    </Form.Row>\n\n                     <Form.Row>\n                        <Form.Group as={Col} controlId=\"dest\">\n                            <Form.Label>Total Elevation Gain</Form.Label>\n                            <br/>\n                            <Form.Label>{totalElevationGain} Meters</Form.Label>\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"dest\">\n                            <Form.Label>Average Incline</Form.Label>\n                            <br/>\n                            <Form.Label>{(averageGrade * 10).toFixed(3)} Vertical Meters per 10 Meters</Form.Label>\n                        </Form.Group>\n                    </Form.Row>\n\n                    <Form.Row>\n                        <Form.Group as={Col} controlId=\"graph\">\n                            <Form.Label>Elevation Graph</Form.Label>\n                            <Line data={testData} legend={legendOpts} options={options}/>\n                        </Form.Group>\n                    </Form.Row>\n                </Form>\n            </Card>\n        );\n    }\n}\n","import React from \"react\";\nimport DeckGL from \"@deck.gl/react\";\nimport { PathLayer, IconLayer } from \"@deck.gl/layers\";\nimport { StaticMap } from \"react-map-gl\";\n\n// Set your mapbox access token here\nconst MAPBOX_TOKEN =\n\t\"pk.eyJ1IjoibmlsYXkxODA4IiwiYSI6ImNrOG1iaXp0cjBkeTEzZm12N3l3ODJweWEifQ.TDhSzGcCsjt5CsVRljpcrw\";\n\nexport default class MapView extends React.Component {\n\trender() {\n\t\tconst data = this.props.data;\n\n\t\tfunction perc2color(perc) {\n\t\t\tlet r, g, b = 0;\n\t\t\tif (perc < 50) {\n\t\t\t\tg = 255;\n\t\t\t\tr = Math.round(5.1 * perc);\n\t\t\t} else {\n\t\t\t\tr = 255;\n\t\t\t\tg = Math.round(510 - 5.1 * perc);\n\t\t\t}\n\t\t\treturn [r, g, b];\n\t\t}\n\n\t\tconst renderColor = (item, min, max) => {\n\t\t\t// get max and min grades\n\t\t\tlet grade = item.path_data[0].grade; // between max and min\n\t\t\tlet grade_percent = (grade - min) * 100 / (max - min)\n\t\t\treturn perc2color(grade_percent)\n\t\t};\n\t\t\n\t\tconst pinLayers = []\n\t\tconst pathLayers = []\n\t\tif (data[0] && data[0].path){\n\t\t\tlet d = data[0]\n\t\t\tlet min_grade = Number.POSITIVE_INFINITY;\n\t\t\tlet max_grade = Number.NEGATIVE_INFINITY;\n\t\t\tfor (let path of d.path_data){\n\t\t\t\tif (path.grade < min_grade){\n\t\t\t\t\tmin_grade = path.grade\n\t\t\t\t}\n\t\t\t\tif (path.grade > max_grade){\n\t\t\t\t\tmax_grade = path.grade\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (let i = 0; i < d.path.length; i++){\n\t\t\t\tif (i === 0){\n\t\t\t\t\tconst pinData = {\n\t\t\t\t\t\tname: \"Start\",\n\t\t\t\t\t\tcoordinates: d.path[i]\n\t\t\t\t\t}\n\t\t\t\t\tpinLayers.push(pinData)\n\t\t\t\t}\n\t\t\t\telse if (i === d.path.length - 1){\n\t\t\t\t\tconst pinData = {\n\t\t\t\t\t\tname: \"Destination\",\n\t\t\t\t\t\tcoordinates: d.path[i]\n\t\t\t\t\t}\n\t\t\t\t\tpinLayers.push(pinData)\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tlet newData = [{color: d.color, name: d.name, path: d.path.slice(i, i+2), path_data: d.path_data.slice(i, i+2)}];\n\t\t\t\tconst newLayer = new PathLayer({\n\t\t\t\t\tid: \"path-layer\" + String(i),\n\t\t\t\t\tdata: newData,\n\t\t\t\t\tpickable: true,\n\t\t\t\t\twidthScale: 5,\n\t\t\t\t\twidthMinPixels: 2,\n\t\t\t\t\tgetColor: (item) => renderColor(item, min_grade, max_grade),\n\t\t\t\t});\n\t\t\t\tpathLayers.push(newLayer);\n\t\t\t}\n\t\t}\n\t\t\n\t\tfor (let i = 0; i < 2; i++){\n\t\t\tpinLayers[i] = new IconLayer({\n\t\t\t\tid: \"pin-layer\",\n\t\t\t\tdata:pinLayers[i],\n\t\t\t\tpickable: true,\n\t\t\t\t// iconAtlas and iconMapping are required\n\t\t\t\t// getIcon: return a string\n\t\t\t\tgetIcon: d => ({\n\t\t\t\t\turl: \"https://img.icons8.com/color/50/000000/map-pin.png\",\n\t\t\t\t\twidth: 128,\n\t\t\t\t\theight: 128,\n\t\t\t\t\tanchorY: 128\n\t\t\t\t  }),\n\t\t\t\n\t\t\t\t//getIcon: d => 'marker',\n\t\n\t\t\t\tsizeScale: 15,\n\t\t\t\tgetPosition: d => d.coordinates,\n\t\t\t\tgetSize: d => 5,\n\t\t\t\t// getColor: d => [d.name=='Start' ? 255 : 0, d.name=='Destination' ? 255 : 0, 0],\n\t\t\t});\n\t\t}\n\t\t\n\n\t\tlet style = {\n\t\t\ttop: \"auto\",\n\t\t\tleft: \"auto\",\n\t\t\tzIndex: \"0\",\n\t\t\tmarginTop: this.props.marginTop,\n\t\t};\n\n\t\treturn (\n\t\t\t<DeckGL\n\t\t\t\t// initialViewState={this.props.viewport}\n\t\t\t\tviewState={this.props.viewport}\n\t\t\t\tonViewStateChange={(v) => {\n\t\t\t\t\tthis.props._onViewStateChange(v);\n\t\t\t\t}}\n\t\t\t\tcontroller={true}\n\t\t\t\tlayers={ [...pathLayers, ...pinLayers]}\n\t\t\t\twidth={this.props.width}\n\t\t\t\theight={this.props.height}\n\t\t\t\tstyle={style}\n\t\t\t>\n\t\t\t\t<StaticMap\n\t\t\t\t\tmapStyle=\"mapbox://styles/mapbox/dark-v10\"\n\t\t\t\t\tonViewportChange={(viewport) => this.setState({ viewport })}\n\t\t\t\t\tmapboxApiAccessToken={MAPBOX_TOKEN}\n\t\t\t\t/>\n\t\t\t</DeckGL>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\n\nimport Modal from \"react-bootstrap/Modal\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default class ErrorModal extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Modal show={this.props.showError}>\n\t\t\t\t<Modal.Header>\n\t\t\t\t\t<Modal.Title>Error</Modal.Title>\n\t\t\t\t</Modal.Header>\n\n\t\t\t\t<Modal.Body>\n\t\t\t\t\t<p>{this.props.errorMsg}</p>\n\t\t\t\t</Modal.Body>\n\n\t\t\t\t<Modal.Footer>\n\t\t\t\t\t<Button variant=\"danger\" onClick={() => {\n\t\t\t\t\t\tthis.props.clearError()\n\t\t\t\t\t}}>Close</Button>\n\t\t\t\t</Modal.Footer>\n\t\t\t</Modal>\n\t\t);\n\t}\n}\n","import React, { Component } from \"react\";\nimport \"./styles/App.css\";\n\nimport UserInput from \"./components/UserInput\";\nimport RouteData from \"./components/RouteData\";\nimport MapView from \"./components/MapView\";\nimport ErrorModal from \"./components/ErrorModal\";\n\nimport { FlyToInterpolator } from \"@deck.gl/core\";\n\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdata: [],\n\t\t\tviewport: {\n\t\t\t\tlatitude: 42.20515744581611,\n\t\t\t\tlongitude: -72.19204888633023,\n\t\t\t\tzoom: 7.5,\n\t\t\t\tbearing: 0,\n\t\t\t\tpitch: 0,\n\t\t\t},\n\t\t\theight: \"99vh\",\n\t\t\twidth: \"100vw\",\n\t\t\tmarginTop: \"1vh\",\n\t\t\terrorMsg: \"No errors\",\n\t\t\tshowError: false,\n\t\t\tloading: false\n\t\t};\n\t\tthis._onViewStateChange = this._onViewStateChange.bind(this);\n\t}\n\n\tupdateData = (d) => {\n\t\tconsole.log(\"update\");\n\t\tconst resp = [];\n\t\tresp.push(d);\n\t\tthis.setState({ data: resp });\n\n\t\tlet len = Math.max(Math.floor((d.path.length - 1) / 2), 0);\n\t\tconst coordinates = d.path[len];\n\t\tlet viewport = this.state.viewport;\n\n\t\tlet zoom = this.calculateZoom(d.path);\n\n\t\tviewport[\"latitude\"] = coordinates[1];\n\t\tviewport[\"longitude\"] = coordinates[0];\n\t\tviewport[\"zoom\"] = zoom;\n\t\tviewport[\"transitionDuration\"] = 5000;\n\t\tviewport[\"transitionInterpolator\"] = new FlyToInterpolator();\n\n\t\tthis.setState({ viewport: viewport });\n\t\tconsole.log(this.state);\n\n\t\tthis.updateLoading()\n\n\t\t// Required to update viewport\n\t\tthis.updateHeight();\n\t};\n\n\t_onViewStateChange({ viewState }) {\n\t\tthis.setState({ viewport: viewState });\n\t}\n\n\tupdateHeight = () => {\n\t\tif (this.state.height === \"100vh\") {\n\t\t\tthis.setState({ height: \"99vh\", marginTop: \"1vh\" });\n\t\t} else {\n\t\t\tthis.setState({ height: \"100vh\", marginTop: \"0vh\" });\n\t\t}\n\t};\n\n\tupdateErrorMsg = (msg) => {\n\t\tthis.setState({ errorMsg: msg, showError: true });\n\t\t// this.updateLoading()\n\t\tconsole.log(\"click\");\n\t};\n\n\tupdateLoading = () => {\n\t\tconsole.log(\"updaing loading\")\n\t\tlet bool = this.state.loading\n\t\tthis.setState({ loading: !bool });\n\t\tconsole.log(this.state)\n\t}\n\n\tclearError = () => {\n\t\tconsole.log(\"clear errors\")\n\t\tthis.setState({ errorMsg: \"No errors\", showError: false });\n\t\tthis.updateLoading()\n\t};\n\n\tcalculateZoom = (path) => {\n\t\tlet start = path[0];\n\t\tlet end = path[path.length - 1];\n\n\t\tlet dist = this.haversine(start[1], start[0], end[1], end[0]);\n\n\t\tconsole.log(\"dist: \" + dist);\n\n\t\tif (dist <= 1500) {\n\t\t\treturn 14.5;\n\t\t}\n\t\tif (dist <= 5000) {\n\t\t\treturn 13;\n\t\t}\n\t\tif (dist <= 15000) {\n\t\t\treturn 12;\n\t\t}\n\t\tif (dist <= 35000) {\n\t\t\treturn 11;\n\t\t}\n\t\tif (dist <= 65000) {\n\t\t\treturn 10;\n\t\t}\n\t\treturn 8;\n\t};\n\n\thaversine = (lat1, lon1, lat2, lon2) => {\n\t\tlet R = 6371e3; // metres\n\t\tlet φ1 = (lat1 * Math.PI) / 180;\n\t\tlet φ2 = (lat2 * Math.PI) / 180;\n\t\tlet Δφ = ((lat2 - lat1) * Math.PI) / 180;\n\t\tlet Δλ = ((lon2 - lon1) * Math.PI) / 180;\n\n\t\tlet a =\n\t\t\tMath.sin(Δφ / 2) * Math.sin(Δφ / 2) +\n\t\t\tMath.cos(φ1) * Math.cos(φ2) * Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\n\t\tlet c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n\t\tlet d = R * c;\n\n\t\treturn d;\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"App\"\n\t\t\t\tstyle={{\n\t\t\t\t\tbackground: \"rgb(23, 24, 24)\",\n\t\t\t\t\tposition: \"relative\",\n\t\t\t\t\talignItems: \"bottom\",\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div style={{ zIndex: 0, position: \"absolute\" }}>\n\t\t\t\t\t<MapView\n\t\t\t\t\t\tdata={this.state.data}\n\t\t\t\t\t\tviewport={this.state.viewport}\n\t\t\t\t\t\t_onViewStateChange={this._onViewStateChange}\n\t\t\t\t\t\theight={this.state.height}\n\t\t\t\t\t\twidth={this.state.width}\n\t\t\t\t\t\tmarginTop={this.state.marginTop}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div style={{ zIndex: 9, height: \"100vh\" }}>\n\t\t\t\t\t<Navbar\n\t\t\t\t\t\tvariant=\"dark\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\theight: \"8vh\",\n\t\t\t\t\t\t\tbackground: \"rgba(0, 0, 0, 0.5)\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName=\"ml-auto\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<Navbar.Brand style={{ marginLeft: \"15px\" }}>\n\t\t\t\t\t\t\tEleNa: Elevation-based Navigation\n\t\t\t\t\t\t</Navbar.Brand>\n\t\t\t\t\t\t<Nav className=\"ml-auto\">\n\t\t\t\t\t\t\t<Nav.Link\n\t\t\t\t\t\t\t\thref=\"https://github.com\"\n\t\t\t\t\t\t\t\tstyle={{ borderLeft: \"solid 1px grey\" }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tGithub\n\t\t\t\t\t\t\t</Nav.Link>\n\t\t\t\t\t\t</Nav>\n\t\t\t\t\t</Navbar>\n\n\t\t\t\t\t<ErrorModal\n\t\t\t\t\t\tshowError={this.state.showError}\n\t\t\t\t\t\terrorMsg={this.state.errorMsg}\n\t\t\t\t\t\tclearError={this.clearError}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<UserInput\n\t\t\t\t\t\t\tclassName=\"userInput\"\n\t\t\t\t\t\t\tupdateData={this.updateData}\n\t\t\t\t\t\t\tpayload={this.state}\n\t\t\t\t\t\t\tupdateErrorMsg={this.updateErrorMsg}\n\t\t\t\t\t\t\tloading={this.state.loading}\n\t\t\t\t\t\t\tupdateLoading = {this.updateLoading}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\tright: \"5%\",\n\t\t\t\t\t\t\ttop: \"12.5%\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<RouteData\n\t\t\t\t\t\t\tclassName=\"routeData\"\n\t\t\t\t\t\t\tdata={this.state.data}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./styles/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}